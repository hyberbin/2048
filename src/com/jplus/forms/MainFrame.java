/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MainFrame.java
 *
 * Created on 2012-5-15, 22:36:27
 */
package com.jplus.forms;

import com.jplus.action.AIStrategy;
import com.jplus.action.BaseGraphic;
import com.jplus.action.PointBeanManager;
import com.jplus.bean.PointBean;
import java.awt.*;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author hyberbin
 */
public class MainFrame extends javax.swing.JFrame{

    public final static PointBeanManager manager = new PointBeanManager();
    /** 当前画图器 */
    public static BaseGraphic painter = new BaseGraphic();
    /** 记录画面状态 */
    public static PointBean[][] pointBeans = manager.getDefaultBeans();
    /** 当前得分 */
    public static int score;
    /** 是否托管 */
    public static boolean isCustody = false;

    /** Creates new form MainFrame */
    public MainFrame() {
        initComponents();
        this.setSize(Main.SIZE * PointBean.size + 220, Main.SIZE * PointBean.size + 110);
        painter.setBackground(PointBean.LINE_GROUND);
        painter.setBounds(10, 30, Main.SIZE * PointBean.size, Main.SIZE * PointBean.size);
        manager.random(pointBeans);
        jPanel1.add(painter);
        setResizable(false);
        ini();
        setVisible(true);
        KeyboardFocusManager.getCurrentKeyboardFocusManager().addKeyEventPostProcessor(new KeyEventPostProcessor() {
                            @Override
                            public boolean postProcessKeyEvent(KeyEvent e) {
                                if (e.getKeyCode() == KeyEvent.VK_UP && e.getID() == KeyEvent.KEY_RELEASED) {
                                    boolean up = manager.up(pointBeans).isMoved();
                                    if (up) {
                                        doNext();
                                    }
                                } else if (e.getKeyCode() == KeyEvent.VK_LEFT && e.getID() == KeyEvent.KEY_PRESSED) {
                                    boolean left = manager.left(pointBeans).isMoved();
                                    if (left) {
                                        doNext();
                                    }
                                } else if (e.getKeyCode() == KeyEvent.VK_RIGHT && e.getID() == KeyEvent.KEY_PRESSED) {
                                    boolean right = manager.right(pointBeans).isMoved();
                                    if (right) {
                                        doNext();
                                    }
                                } else if (e.getKeyCode() == KeyEvent.VK_DOWN && e.getID() == KeyEvent.KEY_PRESSED) {
                                    boolean down = manager.down(pointBeans).isMoved();
                                    if (down) {
                                        doNext();
                                    }
                                }

                                return false;
                            }
                        });
        Toolkit tk = Toolkit.getDefaultToolkit();
        setLocation((tk.getScreenSize().width - getSize().width) / 2,
                (tk.getScreenSize().height - getSize().height) / 2);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.setTitle("2048（Hyberbin制作）");
        this.addWindowListener(new WindowAdapter() {

            @Override
            public void windowClosing(WindowEvent event) {
                if (JOptionPane.showConfirmDialog(null, "确认退出？") == 0) {
                    dispose();
                    System.exit(0);
                }
            }
        });
        painter.paint(painter.getGraphics());
        painter.drawAll(true);
        new AIStrategy().start();
    }

    private void doNext() {
        boolean random = manager.random(pointBeans);
        if(!random){
            JOptionPane.showMessageDialog(this, "游戏结束！");
            System.exit(0);
        }
        painter.drawAll(false);
    }

    /** This method is called from within the constructor to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        replay = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        scoreLable = new javax.swing.JLabel();
        custodyButton = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("操作区"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 304, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("游戏状态"));

        replay.setText("重玩");
        replay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                replayActionPerformed(evt);
            }
        });

        jLabel1.setText("当前得分：");

        scoreLable.setText("0分");

        custodyButton.setText("托管");
        custodyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                custodyButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(scoreLable))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(custodyButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(replay)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(scoreLable)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(custodyButton)
                    .addComponent(replay))
                .addContainerGap(277, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void replayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_replayActionPerformed
        ini();
        pointBeans=manager.getDefaultBeans();
        manager.random(pointBeans);
        painter.drawAll(true);
    }//GEN-LAST:event_replayActionPerformed

    private void custodyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_custodyButtonActionPerformed
        isCustody = !isCustody;
        AIStrategy.PAUSE=!isCustody;
        if (isCustody) {
            custodyButton.setText("接手");
        } else {
            custodyButton.setText("托管");
        }
        
    }//GEN-LAST:event_custodyButtonActionPerformed
    /** *
     * 初始化
     */
    private void ini() {
        score = 0;
        scoreLable.setText("0分");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton custodyButton;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton replay;
    public static javax.swing.JLabel scoreLable;
    // End of variables declaration//GEN-END:variables

}
